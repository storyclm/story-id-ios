//
// ITNAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ITNAPI {
    /**
     Скачивание изображения

     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func downloadItn(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        downloadItnWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Скачивание изображения
     - GET /profiles/{id}/itn/download

     - parameter _id: (path) Уникальный идентификатор в формате StoryId 

     - returns: RequestBuilder<Void> 
     */
    open class func downloadItnWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/profiles/{id}/itn/download"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Получение ИНН

     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getItnById(_id: String, completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        getItnByIdWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Получение ИНН
     - GET /profiles/{id}/itn

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]
     - parameter _id: (path) Уникальный идентификатор в формате StoryId 

     - returns: RequestBuilder<StoryITN> 
     */
    open class func getItnByIdWithRequestBuilder(_id: String) -> RequestBuilder<StoryITN> {
        var path = "/profiles/{id}/itn"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Изменение ИНН

     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func setItn(_id: String, body: StoryITNDTO? = nil, completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        setItnWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Изменение ИНН
     - PUT /profiles/{id}/itn

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]
     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<StoryITN> 
     */
    open class func setItnWithRequestBuilder(_id: String, body: StoryITNDTO? = nil) -> RequestBuilder<StoryITN> {
        var path = "/profiles/{id}/itn"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Загрузка изображения

     - parameter _id: (path)  
     - parameter contentType: (form)  (optional)
     - parameter contentDisposition: (form)  (optional)
     - parameter headers: (form)  (optional)
     - parameter length: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter fileName: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadItn(_id: String, contentType: String? = nil, contentDisposition: String? = nil, headers: [String:[String]]? = nil, length: Int64? = nil, name: String? = nil, fileName: String? = nil, completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        uploadItnWithRequestBuilder(_id: _id, contentType: contentType, contentDisposition: contentDisposition, headers: headers, length: length, name: name, fileName: fileName).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Загрузка изображения
     - PUT /profiles/{id}/itn/upload

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]
     - parameter _id: (path)  
     - parameter contentType: (form)  (optional)
     - parameter contentDisposition: (form)  (optional)
     - parameter headers: (form)  (optional)
     - parameter length: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter fileName: (form)  (optional)

     - returns: RequestBuilder<StoryITN> 
     */
    open class func uploadItnWithRequestBuilder(_id: String, contentType: String? = nil, contentDisposition: String? = nil, headers: [String:[String]]? = nil, length: Int64? = nil, name: String? = nil, fileName: String? = nil) -> RequestBuilder<StoryITN> {
        var path = "/profiles/{id}/itn/upload"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
                "ContentType": contentType,
                "ContentDisposition": contentDisposition,
                "Headers": headers,
                "Length": length?.encodeToJSON(),
                "Name": name,
                "FileName": fileName
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Подтверждение ИНН

     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter verified: (query)  (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func verifyItn(_id: String, verified: Bool? = nil, completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        verifyItnWithRequestBuilder(_id: _id, verified: verified).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Подтверждение ИНН
     - PUT /profiles/{id}/itn/verify

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]
     - parameter _id: (path) Уникальный идентификатор в формате StoryId 
     - parameter verified: (query)  (optional, default to false)

     - returns: RequestBuilder<StoryITN> 
     */
    open class func verifyItnWithRequestBuilder(_id: String, verified: Bool? = nil) -> RequestBuilder<StoryITN> {
        var path = "/profiles/{id}/itn/verify"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "verified": verified
        ])

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
