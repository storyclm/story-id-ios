//
// ProfileSNILSAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ProfileSNILSAPI {
    /**
     Скачивание изображения СНИЛС текущего пользователя

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func downloadSnils(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        downloadSnilsWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Скачивание изображения СНИЛС текущего пользователя
     - GET /profile/snils/download


     - returns: RequestBuilder<Void> 
     */
    open class func downloadSnilsWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/profile/snils/download"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Получение СНИЛС текущего пользователя

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSnils(completion: @escaping ((_ data: StorySNILS?,_ error: Error?) -> Void)) {
        getSnilsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Получение СНИЛС текущего пользователя
     - GET /profile/snils

     - examples: [{contentType=application/json, example={
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy",
  "snils" : "snils"
}}]

     - returns: RequestBuilder<StorySNILS> 
     */
    open class func getSnilsWithRequestBuilder() -> RequestBuilder<StorySNILS> {
        let path = "/profile/snils"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StorySNILS>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Удаление изображения СНИЛС текущего пользователя

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func removeSnilsBlob(completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        removeSnilsBlobWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Удаление изображения СНИЛС текущего пользователя
     - DELETE /profile/snils/upload

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]

     - returns: RequestBuilder<StoryITN> 
     */
    open class func removeSnilsBlobWithRequestBuilder() -> RequestBuilder<StoryITN> {
        let path = "/profile/snils/upload"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Изменение СНИЛС текущего пользователя

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func setSnils(body: StorySNILSDTO? = nil, completion: @escaping ((_ data: StorySNILS?,_ error: Error?) -> Void)) {
        setSnilsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Изменение СНИЛС текущего пользователя
     - PUT /profile/snils

     - examples: [{contentType=application/json, example={
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy",
  "snils" : "snils"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<StorySNILS> 
     */
    open class func setSnilsWithRequestBuilder(body: StorySNILSDTO? = nil) -> RequestBuilder<StorySNILS> {
        let path = "/profile/snils"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StorySNILS>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Загрузка изображения СНИЛС текущего пользователя

     - parameter contentType: (form)  (optional)
     - parameter contentDisposition: (form)  (optional)
     - parameter headers: (form)  (optional)
     - parameter length: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter fileName: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadSnils(contentType: String? = nil, contentDisposition: String? = nil, headers: [String:[String]]? = nil, length: Int64? = nil, name: String? = nil, fileName: String? = nil, completion: @escaping ((_ data: StoryITN?,_ error: Error?) -> Void)) {
        uploadSnilsWithRequestBuilder(contentType: contentType, contentDisposition: contentDisposition, headers: headers, length: length, name: name, fileName: fileName).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Загрузка изображения СНИЛС текущего пользователя
     - PUT /profile/snils/upload

     - examples: [{contentType=application/json, example={
  "itn" : "itn",
  "size" : 0,
  "profileId" : "profileId",
  "modifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "verified" : true,
  "verifiedAt" : "2000-01-23T04:56:07.000+00:00",
  "modifiedBy" : "modifiedBy",
  "mimeType" : "mimeType",
  "verifiedBy" : "verifiedBy"
}}]
     - parameter contentType: (form)  (optional)
     - parameter contentDisposition: (form)  (optional)
     - parameter headers: (form)  (optional)
     - parameter length: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter fileName: (form)  (optional)

     - returns: RequestBuilder<StoryITN> 
     */
    open class func uploadSnilsWithRequestBuilder(contentType: String? = nil, contentDisposition: String? = nil, headers: [String:[String]]? = nil, length: Int64? = nil, name: String? = nil, fileName: String? = nil) -> RequestBuilder<StoryITN> {
        let path = "/profile/snils/upload"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
                "ContentType": contentType,
                "ContentDisposition": contentDisposition,
                "Headers": headers,
                "Length": length?.encodeToJSON(),
                "Name": name,
                "FileName": fileName
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<StoryITN>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
